require('events').EventEmitter.prototype._maxListeners = 100;
const express = require('express');
const fs = require('fs');
require('dotenv').config();
const { Telegraf } = require('telegraf');

const { message } = require('telegraf/filters');
const { Imagine } = require('./controllers/Imagine');
const { Upscale } = require('./controllers/Upscale');
//const { DownloadImage } = require('./controllers/DownloadImage')
const { ImproveQuality } = require('./controllers/ImproveQuality');

const { CleanupText } = require('./controllers/CleanupText');
const { TranslateText } = require('./controllers/TranslateText');

const app = express();

app.use(express.json());

const bot = new Telegraf(process.env.BOT_TOKEN);


function writeToFileSync(filename, text) {
  try {
    fs.appendFileSync(filename, text + '\n');
    console.log('Строка успешно записана в файл.');
  } catch (err) {
    console.error('Ошибка при записи в файл:', err);
  }
}

let stateIndex = 0;
let requests = [];

async function splitText(text) {
    text = text.split('\n');
    for (let item of text) {
        writeToFileSync('requests.txt', item);
        requests.push(item);
    }
}

bot.command('getstatistic', (ctx) => {
  // Установка флага, чтобы не фиксировать следующее сообщение
  ctx.state.ignoreNextMessage = true;

  // Здесь поместите логику для получения статистики
  const statistic = `
  количество сообщений в обработке: ${requests.length}
  `; // Пример ответа со статистикой
  ctx.reply(statistic);
});

bot.on(message('text'), async (ctx) => {
    if (ctx.state.ignoreNextMessage) {
      // Сообщение должно быть проигнорировано
      ctx.state.ignoreNextMessage = false; // Сброс флага
      return;
    }

    await splitText(ctx.message.text);
});

setInterval(() => {
  if (requests.length !== 0 && Boolean(process.env.ACTION_BEING)) {
    process.env.ACTION_BEING = '';

    let firstItem = requests.shift();
    TranslateText(firstItem)
    .then(res => {
        Imagine(res, CleanupText(firstItem))
        console.log(CleanupText(firstItem) + "    " + res)
    })
  }  

}, 20000);


function imagineIteration(buttonMessageId, iterations, originalPromt) {
  if (iterations <= 4) {
    Upscale(buttonMessageId, `U${iterations}`, originalPromt);
  } else {
    console.log("Завершено");
    return;
  }

  setTimeout(() => {
    imagineIteration(buttonMessageId, iterations + 1, originalPromt);
  }, 3000);
}

app.post('/imagine', (req, res) => {
  imagineIteration(req.body.buttonMessageId, 1, req.body.ref);
  stateIndex = 0;
});

app.post('/upscale', async (req, res) => {
  let name = CleanupText(req.body.content);
  ImproveQuality(req.body.imageUrl, name, req.body.ref, stateIndex)
  //await DownloadImage(req.body.imageUrl, name, req.body.ref, stateIndex);
  stateIndex += 1;
})


// Set up webhook
//https://auspersonalproduct.site/
bot.telegram.setWebhook('https://auspersonalproduct.site');

// Bind to Express app
app.use(bot.webhookCallback('/'));

app.listen(3000, 'localhost', () => {
  console.log('Сервер запущен на порту 3000');
});
bot.launch();
//admin-533@midjourney-bot-388312.iam.gserviceaccount.com
